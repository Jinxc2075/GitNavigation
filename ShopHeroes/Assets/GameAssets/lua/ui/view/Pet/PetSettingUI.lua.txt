--PetSettingUI

require("const/Constants")
require("class")
require("ui/ViewBase")
require("utils/XLuaUtils")

local EventDispatcher = require("event/EventDispatcher")

local Vector3 = CS.UnityEngine.Vector3

local CS_type_ObjList = typeof(CS.ObjList)
local CS_type_GUIIcon = typeof(CS.GUIIcon)

local CS_EventControllerInst = CS.EventController.inst
local CS_GameEventType = CS.GameEventType

local CS_PetDataProxyInst = CS.PetDataProxy.inst
local CS_LanguageManagerInst = CS.LanguageManager.inst

local CS_CharacterManagerInst = CS.CharacterManager.inst
local CS_SpineUtils = CS.SpineUtils
local CS_GameTimerInst = CS.GameTimer.inst

PetSettingUI = class(ViewBase)

function PetSettingUI:ctor()
	self.viewID = Constants.ViewName.PetSettingUI
	PetSettingUI.super.init(self, self.viewID)
	self.sortingLayerName = "window"
	self.isShowResPanel = false
end
------------------------------------------------


function PetSettingUI:initComp()
	local contentPane = self.contentPanel

	self.closeBtn =  contentPane:GetButton("closeBtn");
	self.maskBtn =  contentPane:GetButton("maskBtn");
	self.storeBtn = contentPane:GetButton("storeBtn")
	self.dressBtn = contentPane:GetButton("dressBtn")
	self.changeNameBtn = contentPane:GetButton("changeNameBtn")
	self.petNameTx = contentPane:GetText("petNameTx")
	self.petHeadIcon = contentPane:GetObjByName("petHeadIcon"):GetComponent(CS_type_GUIIcon)
	
	self.uiAnimator = contentPane.uiAnimator
	
end


function PetSettingUI:onInit()

	self:initComp()

	self.closeBtn:ButtonClickTween(
		function ()
			self:hide()
		end)

	self.maskBtn.onClick:AddListener(
		function ()
			self:hide()
		end)

	self.storeBtn:ButtonClickTween(
		function ()
			self:storeBtnClick()
		end)
	
	self.dressBtn:ButtonClickTween(
		function ()
			self:dressBtnClick()
		end)

	self.changeNameBtn:ButtonClickTween(
		function ()
			self:chaneNameBtnClick()
		end)

end


function PetSettingUI:onHide()
	print("PetSettingUI onHide")
end

function PetSettingUI:onShowed()
	print("PetSettingUI onShowed")
end

function PetSettingUI:DoShowAnimation()

	self:onShowed()

	self.uiAnimator:CrossFade("show", 0);
	self.uiAnimator:Update(0);
	self.uiAnimator:Play("show");

end

function PetSettingUI:DoHideAnimation()

	self.uiAnimator:Play("hide");
	local animLength = self.uiAnimator:GetClipLength("common_popUpUI_hide")

	CS_GameTimerInst:AddTimer(animLength,1,function ()
			self.uiAnimator:CrossFade("null", 0);
			self.uiAnimator:Update(0);
			self:HideView();
		end)

end

function PetSettingUI:SetData(petData)
	
	self.data = petData
	
	self.storeBtn.gameObject:SetActive(self.data.petInfo.petState ~= 3)
	
	self.petNameTx.text = self.data.petInfo.petName
	
	local petCfg = PetConfigManager:GetConfig(self.data.petInfo.petId)
	self.petHeadIcon:SetSprite("petIcon_atlas",petCfg.icon)
	
end


function PetSettingUI:shiftIn()
	self.contentObject:SetActive(true)
end

function PetSettingUI:shiftOut()
	self.contentObject:SetActive(false)
end

function PetSettingUI:storeBtnClick()
	
	EventDispatcher:dispatchEvent(GameEvent.PetEvent.ShowUI_StorePetHouseConfirmUI,self.data.petInfo.furnitureUid)
	
end

function PetSettingUI:dressBtnClick()
	
	EventDispatcher:dispatchEvent(GameEvent.PetEvent.ShowUI_ChangePetDressUpUI,self.data)
	
end

function PetSettingUI:chaneNameBtnClick()
	
	EventDispatcher:dispatchEvent(GameEvent.PetEvent.ShowUI_PetChangeNameUI,self.data.petUid,self.data.petInfo.petName)
	
end

------------------------------------------------