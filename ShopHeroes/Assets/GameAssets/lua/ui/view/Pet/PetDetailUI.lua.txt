--PetDetailUI

require("const/Constants")
require("class")
require("ui/ViewBase")
require("utils/XLuaUtils")

local EventDispatcher = require("event/EventDispatcher")

local Vector3 = CS.UnityEngine.Vector3

local CS_type_ObjList = typeof(CS.ObjList)
local CS_type_GUIIcon = typeof(CS.GUIIcon)

local CS_EventControllerInst = CS.EventController.inst
local CS_GameEventType = CS.GameEventType

local CS_GameTimerInst = CS.GameTimer.inst
local CS_TimeUtils = CS.TimeUtils

local CS_UserDataProxyInst = CS.UserDataProxy.inst
local CS_PetDataProxyInst = CS.PetDataProxy.inst
local CS_LanguageManagerInst = CS.LanguageManager.inst

local CS_CharacterManagerInst = CS.CharacterManager.inst
local CS_SpineUtils = CS.SpineUtils

local CS_FurnitureConfigManagerInst = CS.FurnitureConfigManager.inst

PetDetailUI = class(ViewBase)

function PetDetailUI:ctor()
	self.viewID = Constants.ViewName.PetDetailUI
	PetDetailUI.super.init(self, self.viewID)
	self.sortingLayerName = "window"
	self.isShowResPanel = false
end
------------------------------------------------


function PetDetailUI:initComp()
	local contentPane = self.contentPanel

	self.closeBtn = contentPane:GetButton("closeBtn");
	self.maskBtn = contentPane:GetButton("maskBtn");
	self.leftBtn = contentPane:GetButton("leftBtn");
	self.rightBtn = contentPane:GetButton("rightBtn");
	self.petPosTf = contentPane:GetObjByName("petPos"):GetComponent("RectTransform")
	self.lvTx = contentPane:GetText("lvTx");
	self.headIcon = contentPane:GetObjByName("headIcon"):GetComponent(CS_type_GUIIcon)
	self.settingBtn = contentPane:GetButton("settingBtn");
	self.nameTx = contentPane:GetText("nameTx");
	self.typeTx = contentPane:GetText("typeTx");
	self.expSlider = contentPane:GetObjByName("expSlider"):GetComponent("Slider");
	self.expSliderTx = contentPane:GetText("expSliderTx")
	self.curReputationNumTx = contentPane:GetText("curReputationNumTx")
	self.nextReputationNumTx = contentPane:GetText("nextReputationNumTx")
	self.curEnergyNumTx = contentPane:GetText("curEnergyNumTx")
	self.nextEnergyNumTx = contentPane:GetText("nextEnergyNumTx")
	self.feedBtn = contentPane:GetButton("feedBtn")
	self.countdownObj = contentPane:GetObjByName("countdownObj")
	self.countdownTx = contentPane:GetText("countdownTx")
	self.putHouseBtn = contentPane:GetButton("putHouseBtn")
	self.isMainToggle = contentPane:GetObjByName("isMainToggle"):GetComponent("Toggle")


end


function PetDetailUI:onInit()

	self.timerId = 0
	self.dressUpSystem = nil

	self:initComp()

	self.leftBtn:ButtonClickTween(
		function ()
			self:turnPage(true)	
		end)
	
	self.rightBtn:ButtonClickTween(
		function ()
			self:turnPage(false)
		end)

	self.closeBtn:ButtonClickTween(
		function ()
			self:closeBtnClick()
		end)

	self.maskBtn:ButtonClickTween(
		function ()
			self:closeBtnClick()
		end)


	self.settingBtn:ButtonClickTween(
		function ()
			self:settingBtnClick()
		end)

	self.feedBtn:ButtonClickTween(
		function ()
			self:feedBtnClick()
		end)

	self.putHouseBtn:ButtonClickTween(
		function ()
			self:petHouseBtnClick()
		end)

	self.isMainToggle.onValueChanged:AddListener(
		function (isOn)
			if (CS_UserDataProxyInst.playerData.mainPetUid == self.data.petUid) ~= isOn then
				
				if isOn then
					EventDispatcher:dispatchEvent(GameEvent.MsgTipEvent.ShowTextMsgTip,CS_LanguageManagerInst:GetValueByKey("{0} 已设为主宠物",self.data.petInfo.petName),"FFFFFF")
				else
					EventDispatcher:dispatchEvent(GameEvent.MsgTipEvent.ShowTextMsgTip,CS_LanguageManagerInst:GetValueByKey("{0} 不再是你的主宠物",self.data.petInfo.petName),"FFFFFF")
				end
				
				EventDispatcher:dispatchEvent(GameEvent.PetEvent.REQUEST_PET_SETMAIN,self.data.petUid)
			end
		end)

end

function PetDetailUI:Refresh()
	if self.data ~= nil then
		self:SetData(self.data)
	end
end

function PetDetailUI:UpdateData(chgPetDataUid)

	if self.data.petUid == chgPetDataUid then

		self:SetData(CS_PetDataProxyInst:GetPetDataByPetUid(chgPetDataUid))

	end

end


function PetDetailUI:SetData(petData)

	local list = CS_PetDataProxyInst:GetHasPetDatas()
	
	self.leftBtn.gameObject:SetActive(list.Count > 1)
	self.rightBtn.gameObject:SetActive(list.Count > 1)
	
	self.data = petData
	
	self.isMainToggle.isOn = CS_UserDataProxyInst.playerData.mainPetUid == self.data.petUid

	local petCfg = PetConfigManager:GetConfig(self.data.petInfo.petId)
	self.headIcon:SetSprite("petIcon_atlas",petCfg.icon)
	
	if self.dressUpSystem == nil or self.dressUpSystem:IsNull() == true then

		local funcGeneric = xlua.get_generic_method(CS.CharacterManager, "GetCharacterByModel")
		local func = funcGeneric(CS.DressUpSystem)

		func(CS_CharacterManagerInst,self.data.petCfg.model,1.4,true,function (system)
				self.dressUpSystem = system
				system:SetUIPosition(self.petPosTf,self._uiCanvas.sortingLayerName,self._uiCanvas.sortingOrder + 1,1.8)
				system:Play("idle",true)
				system:SetDirection(CS.RoleDirectionType.Left);
			end)

	else
		CS_CharacterManagerInst:ReSetCharacterByModel(self.dressUpSystem,self.data.petCfg.model)
		self.dressUpSystem:SetUIPosition(self.petPosTf,self._uiCanvas.sortingLayerName,self._uiCanvas.sortingOrder + 1,1.8)
	end


	self.lvTx.text = tostring(petData.petInfo.petLevel)
	self.nameTx.text = CS_LanguageManagerInst:GetValueByKey(petData.petInfo.petName)
	self.typeTx.text = CS_LanguageManagerInst:GetValueByKey(petCfg.name)

	local curConfig = PetUpdateConfigManager:GetConfig(petData.petInfo.petLevel)
	local nextConfig = PetUpdateConfigManager:GetConfig(petData.petInfo.petLevel + 1)
	self.isMaxLv = false

	if nextConfig == nil then
		self.isMaxLv = true
	end

	self.expSlider.value = self.isMaxLv and 1 or petData.petInfo.petExp / (nextConfig.exp * 1.0)
	self.expSliderTx.text = self.isMaxLv and CS_LanguageManagerInst:GetValueByKey("已满级") or tostring(petData.petInfo.petExp).."/"..tostring(nextConfig.exp)

	self.curReputationNumTx.text = petData.petInfo.petReputation
	self.nextReputationNumTx.text = self.isMaxLv and CS_LanguageManagerInst:GetValueByKey("已满级") or 0 --todo 预留声望

	self.curEnergyNumTx.text = tostring(curConfig.energy)
	self.nextEnergyNumTx.text =  self.isMaxLv and CS_LanguageManagerInst:GetValueByKey("已满级") or tostring(nextConfig.energy)


	self:clearTimer()

	--是否在店铺内
	if 	self.data.petInfo.petState == 3 then --存放状态

		self.countdownObj:SetActive(false)
		self.feedBtn.gameObject:SetActive(false)
		self.putHouseBtn.gameObject:SetActive(true)

	else

		self.putHouseBtn.gameObject:SetActive(false)

		if self.data.petNextFeedTime <= 0 then --可以喂养

			self.countdownObj:SetActive(false)
			self.feedBtn.gameObject:SetActive(true)

		else

			self.countdownObj:SetActive(true)
			self.feedBtn.gameObject:SetActive(false)
			self:setTimer()

		end

	end

end


function PetDetailUI:onHide()
	print("PetDetailUI onHide")
	
	self:clearTimer()
	
end

function  PetDetailUI:onShowed()
	print("PetDetailUI onShowed")
end


function PetDetailUI:shiftIn()
	self.contentObject:SetActive(true)
end

function PetDetailUI:shiftOut()
	self.contentObject:SetActive(false)
end

function PetDetailUI:closeBtnClick()
	self:hide()
end

function PetDetailUI:settingBtnClick()

	EventDispatcher:dispatchEvent(GameEvent.PetEvent.ShowUI_PetSettingUI,self.data)

end

function PetDetailUI:turnPage(isLeft)
	
	local funcGeneric = xlua.get_generic_method(CS.EventController, "TriggerEvent_Lua3")
	local func_3 = funcGeneric(CS.System.Boolean,CS.System.Boolean,CS.System.Int32)
	
	func_3(CS_EventControllerInst,CS_GameEventType.PetCompEvent.PET_TURNPAGE,true,isLeft,self.data.petUid)
	
end

function PetDetailUI:feedBtnClick()


	if self.isMaxLv then
		EventDispatcher:dispatchEvent(GameEvent.MsgTipEvent.ShowTextMsgTip,CS_LanguageManagerInst:GetValueByKey("宠物等级已达上限",self.data.petInfo.petName),"FFFFFF")
		return

	end

	EventDispatcher:dispatchEvent(GameEvent.PetEvent.ShowUI_FeedPetUI,self.data)

end

function PetDetailUI:petHouseBtnClick()

	EventDispatcher:dispatchEvent(GameEvent.PetEvent.PutPetHouse,self.data.petInfo.furnitureUid)

end


function PetDetailUI:setTimer()

	self:clearTimer()

	self.countdownTx.text = CS_TimeUtils.timeSpanStrip(self.data.petNextFeedTime,true)

	self.timerId = CS_GameTimerInst:AddTimer(1,function()

			self.countdownTx.text = CS_TimeUtils.timeSpanStrip(self.data.petNextFeedTime,true)

		end)

end

function PetDetailUI:clearTimer()

	if self.timerId ~= 0 then

		CS_GameTimerInst:RemoveTimer(self.timerId)
		self.timerId = 0

	end

end

------------------------------------------------