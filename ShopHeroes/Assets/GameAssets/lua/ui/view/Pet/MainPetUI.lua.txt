--MainPetUI

require("const/Constants")
require("class")
require("ui/ViewBase")
require("utils/XLuaUtils")

local EventDispatcher = require("event/EventDispatcher")
local luaClass_PetBoothItem =  require("ui/view/Pet/PetBoothItem")

local CS_type_ObjList = typeof(CS.ObjList)
local CS_GameTimerInst = CS.GameTimer.inst

local CS_EventControllerInst = CS.EventController.inst
local CS_GameEventType = CS.GameEventType

local CS_PetDataProxyInst = CS.PetDataProxy.inst
local CS_LanguageManagerInst = CS.LanguageManager.inst

local CS_FieldConfigManagerInst = CS.FieldConfigManager.inst


MainPetUI = class(ViewBase)

function MainPetUI:ctor()
	self.viewID = Constants.ViewName.MainPetUI
	MainPetUI.super.init(self, self.viewID)
	self.sortingLayerName = "window"
	self.isShowResPanel = true
	self.topResPanelType = CS.TopPlayerShowType.noSetting
end
------------------------------------------------


function MainPetUI:initComp()
	local contentPane = self.contentPanel

	self.closeBtn =  contentPane:GetButton("closeBtn");
	self.maskBtn =  contentPane:GetButton("maskBtn");
	self.petBoothItems = {}

	local petBoothItems = contentPane:GetObjByName("petBoothsObj"):GetComponent(CS_type_ObjList).objList

	for i = 0, petBoothItems.Count - 1 do

		local petBoothItem = luaClass_PetBoothItem.new()
		petBoothItem:init(petBoothItems[i])

		self.petBoothItems[#self.petBoothItems + 1] = petBoothItem

	end

	self.uiAnimator = contentPane.uiAnimator

end


function MainPetUI:onInit()

	self:initComp()


	self.closeBtn:ButtonClickTween(
		function ()
			self:closeBtnClick()
		end)

	self.maskBtn.onClick:AddListener(
		function ()
			self:closeBtnClick()
		end)

end


function MainPetUI:onHide()
	print("MainPetUI onHide")
end

function  MainPetUI:onShowed()
	print("MainPetUI onShowed")

	self:SetData()
end

function MainPetUI:DoShowAnimation()

	self:onShowed()

	self.uiAnimator:CrossFade("show", 0);
	self.uiAnimator:Update(0);
	self.uiAnimator:Play("show");

end

function MainPetUI:DoHideAnimation()

	self.uiAnimator:Play("hide");
	local animLength = self.uiAnimator:GetClipLength("common_popUpUI_hide")

	CS_GameTimerInst:AddTimer(animLength,1,function ()
			self.uiAnimator:CrossFade("null", 0);
			self.uiAnimator:Update(0);
			self:HideView();
		end)

end

function MainPetUI:SetData()

	local boothCostConfigs = CS_FieldConfigManagerInst:GetFieldCostCfgs(5)

	local petDatas = CS_PetDataProxyInst:GetAllPetDatas()
	local boothNum = CS_PetDataProxyInst.BoothNum

	for i = 1, #self.petBoothItems do

		if i <= boothNum and i <= petDatas.Count then

			self.petBoothItems[i]:SetData(petDatas[i - 1])

		elseif i == boothNum + 1 and i <= boothCostConfigs.Count then --购买宠物栏位

			self.petBoothItems[i]:SetState(1)

		else

			self.petBoothItems[i]:SetState(0) --敬请期待

		end

	end


end

function MainPetUI:UpdateOnePetData(chgPetDataId)

	for i = 1, #self.petBoothItems do

		local petBoothItem = self.petBoothItems[i]

		if petBoothItem.data ~= nil and petBoothItem.data.petInfo.petId == chgPetDataId then

			self.petBoothItems[i]:SetData(CS_PetDataProxyInst:GetPetDataByPetUid(chgPetDataId))

		end

	end

end


function MainPetUI:shiftIn()
	self.contentObject:SetActive(true)
end

function MainPetUI:shiftOut()
	self.contentObject:SetActive(false)
end

function MainPetUI:closeBtnClick()
	self:hide()
end

function MainPetUI:onHide()

	for i = 1, #self.petBoothItems do
		self.petBoothItems[i]:clearTimer()
	end

end

------------------------------------------------