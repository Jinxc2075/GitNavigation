--UnionWealUI

require("const/Constants")
require("class")
require("ui/ViewBase")
local EventDispatcher = require("event/EventDispatcher")

local CS_type_superList = typeof(CS.Mosframe.DynamicScrollView)
local CS_type_ToggleGroupMarget = typeof(CS.ToggleGroupMarget)
local CS_type_ObjList = typeof(CS.ObjList)

local CS_UserDataProxyInst = CS.UserDataProxy.inst
local CS_EventControllerInst = CS.EventController.inst
local CS_GameEventType = CS.GameEventType
local CS_LanguageManagerInst = CS.LanguageManager.inst
local CS_GameTimerInst = CS.GameTimer.inst
local CS_TimeUtils = CS.TimeUtils

local CS_UnionTaskPopularityConfigManagerInst = CS.UnionTaskPopularityConfigManager.inst

UnionWealUI = class(ViewBase)

function UnionWealUI:ctor()
	self.viewID = Constants.ViewName.UnionWealUI
	UnionWealUI.super.init(self, self.viewID)
	self.sortingLayerName = "window"
	self.isShowResPanel = true
	self.topResPanelType = CS.TopPlayerShowType.noSettingAndEnergy
end
------------------------------------------------

--[[

closeBtn
superList

--]]

function UnionWealUI:initComp()
	local contentPane = self.contentPanel

	self.closeBtn =  contentPane:GetButton("closeBtn");
	self.stateGroup = contentPane:GetObjByName("stateGroup"):GetComponent(CS_type_ToggleGroupMarget)
	self.toggleLinkObjs = contentPane:GetObjByName("toggleLinkObjs"):GetComponent(CS_type_ObjList).objList
	self.wealSuperList = contentPane:GetObjByName("wealItemList"):GetComponent(CS_type_superList)
	self.buffSuperList = contentPane:GetObjByName("buffItemList"):GetComponent(CS_type_superList)

	self.uiAnimator = contentPane.uiAnimator
	
end


function UnionWealUI:onInit()

	self:initComp()

	self.index = 0

	self.stateGroup.OnSelectedIndexValueChange = function (index)
		self:onSelectedIndexValueChange(index)
	end

	self.closeBtn:ButtonClickTween(
		function ()
			self:closeBtnClick()
		end
	)

	self.wealSuperList.itemRenderer = function(index,item)
		self:wealListItemRenderer(index,item)
	end

	self.wealSuperList.itemUpdateInfo = function(index,item)
		self:wealListItemRenderer(index,item)
	end


	self.buffSuperList.itemRenderer = function(index,item)
		self:buffListItemRenderer(index,item)
	end

	self.buffSuperList.itemUpdateInfo = function(index,item)
		self:buffListItemRenderer(index,item)
	end

end


function UnionWealUI:onHide()
	print("UnionWealUI onHide")
end

function  UnionWealUI:onShowed()
	print("UnionWealUI onShowed")
	
	if CS_UserDataProxyInst.union_needRequest_Science == 1 then
		CS_UserDataProxyInst.union_needRequest_Science = 0
		CS_EventControllerInst:TriggerEvent(CS_GameEventType.UnionEvent.UNION_REQUEST_SCIENCELIST);
	else
		self:SetData()
	end
	
end

function UnionWealUI:DoShowAnimation()

	self:onShowed()

	self.uiAnimator:CrossFade("show", 0);
	self.uiAnimator:Update(0);
	self.uiAnimator:Play("show");

end

function UnionWealUI:DoHideAnimation()

	self.uiAnimator:Play("hide");
	local animLength = self.uiAnimator:GetClipLength("commonBagUI_hide")

	CS_GameTimerInst:AddTimer(animLength,1,function ()
			self.uiAnimator:CrossFade("null", 0);
			self.uiAnimator:Update(0);
			self:HideView();
		end)

end

function UnionWealUI:SetData()
	self.stateGroup:OnEnableMethod(self.index)
end

function UnionWealUI:onSelectedIndexValueChange(index)

	self.index = index

	for i = 0,self.toggleLinkObjs.Count - 1 do
		self.toggleLinkObjs[i]:SetActive(false)
	end

	self.toggleLinkObjs[index]:SetActive(true)

	self:setState(index)

end

function UnionWealUI:setState(index)

	if index == 0 then --科技

		self.wealSuperList.totalItemCount = CS_UserDataProxyInst.UnionScienceList.Count

	elseif index == 1 then	--buff
		
		self.buffSuperList.totalItemCount = CS_UserDataProxyInst.UnionBuffDatas.Count
		
	end

end


function UnionWealUI:shiftIn()
	self.contentObject:SetActive(true)
end

function UnionWealUI:shiftOut()
	self.contentObject:SetActive(false)
end

function UnionWealUI:closeBtnClick()
	self:hide()
end

function UnionWealUI:wealListItemRenderer(index, item)
	item:SetData(index);
end

function UnionWealUI:buffListItemRenderer(index, item)
	item:SetData(index);
end

------------------------------------------------