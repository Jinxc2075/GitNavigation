
-- UnionSelfTaskDetailUI

require("utils/XLuaUtils")
require("const/Constants")
require("class")
require("ui/ViewBase")

local EventDispatcher = require("event/EventDispatcher")

local CS_type_ObjList = typeof(CS.ObjList)
local CS_type_GUIIcon = typeof(CS.GUIIcon)
local CS_EventControllerInst = CS.EventController.inst
local CS_GameEventType = CS.GameEventType
local CS_GameTimerInst = CS.GameTimer.inst
local CS_TimeUtils = CS.TimeUtils
local CS_UserDataProxyInst = CS.UserDataProxy.inst
local CS_LanguageManagerInst = CS.LanguageManager.inst
local CS_WorldParConfigManagerInst = CS.WorldParConfigManager.inst

UnionSelfTaskDetailUI = class(ViewBase)

function UnionSelfTaskDetailUI:ctor()
	self.viewID = Constants.ViewName.UnionSelfTaskDetailUI
	UnionSelfTaskDetailUI.super.init(self, self.viewID)
	self.sortingLayerName = "popup"
	self.isShowResPanel = true
	self.topResPanelType = CS.TopPlayerShowType.selfUnionToken
end
------------------------------------------------

function UnionSelfTaskDetailUI:initComp()

	local contentPane = self.contentPanel

	self.btn_mask =  contentPane:GetButton("btn_mask");
	self.btn_close =  contentPane:GetButton("btn_close");

	local starObjs = contentPane:GetObjByName("objList_stars"):GetComponent(CS_type_ObjList).objList;
	self.stars = {}
	
	for i = 0, starObjs.Count - 1 do
		self.stars[#self.stars + 1] = starObjs[i]:GetComponent(CS_type_GUIIcon)
	end
	
	self.icon_unionTaskTarget = contentPane:GetGUIIcon("icon_unionTaskTarget")
	self.tx_unionTaskName = contentPane:GetText("tx_unionTaskName")
	self.slider_unionTask = contentPane:GetObjByName("slider_unionTask"):GetComponent("Slider")
	self.tx_unionTaskSlider = contentPane:GetText("tx_unionTaskSlider")
	self.tx_unionTaskCountDown = contentPane:GetText("tx_unionTaskCountDown")
	self.obj_unionTaskCountDown = contentPane:GetObjByName("obj_unionTaskCountDown")
	self.btn_unionTaskCancel = contentPane:GetButton("btn_unionTaskCancel")
	self.icon_selfAward = contentPane:GetGUIIcon("icon_selfAward")
	self.tx_selfAwardNum = contentPane:GetText("tx_selfAwardNum")
	self.btn_unionTaskGem = contentPane:GetButton("btn_unionTaskGem")
	self.tx_unoinTaskGem = contentPane:GetText("tx_unoinTaskGem")
	self.tx_unionTaskAward = contentPane:GetText("tx_unionTaskAward")
	self.obj_unionDoingState = contentPane:GetObjByName("obj_unionDoingState")
	self.btn_unionTaskAward = contentPane:GetButton("btn_unionTaskAward")
	self.tx_unionAwardTaskName = contentPane:GetText("tx_unionAwardTaskName")
	self.Img_unionConfirm = contentPane:GetImage("Img_unionConfirm")

	self.uiAnimator = contentPane.uiAnimator

end


function UnionSelfTaskDetailUI:onInit()

	self:initComp()

	self.btn_close:ButtonClickTween(
		function ()
			self:hide()
		end
	)
	
	self.btn_mask.onClick:AddListener(
		function ()
			self:hide()
		end
	)
	
	self.btn_unionTaskCancel:ButtonClickTween(function ()
		self:onUnionTaskCancelBtnClick()
	end)
	
	self.btn_unionTaskAward:ButtonClickTween(function ()
		self:onUnionTaskAwardBtnClick()
	end)
	
	self.btn_unionTaskGem:ButtonClickTween(function ()
		self:onUnionTaskGemBtnClick()
	end)

end

function UnionSelfTaskDetailUI:SetData(selfUnionTask)
	
	self.unionTask = selfUnionTask
	
	for i = 1, #self.stars do
		
		if i <= selfUnionTask.data.point then
			self.stars[i]:SetSprite("__common_1","lianmeng_shengwang")
		else
			self.stars[i]:SetSprite("union_atlas","lianmeng_shengwang2")
		end
		
	end
	
	self.icon_unionTaskTarget:SetSprite(selfUnionTask.atlas,selfUnionTask.icon)
	self.tx_unionTaskName.text = CS_LanguageManagerInst:GetValueByKey(selfUnionTask.config.desc, tostring(selfUnionTask.data.limit), selfUnionTask.StrParam_2)
	self.tx_unionAwardTaskName.text = CS_LanguageManagerInst:GetValueByKey(selfUnionTask.config.desc, tostring(selfUnionTask.data.limit), selfUnionTask.StrParam_2)

	self.slider_unionTask.value = selfUnionTask.data.process / selfUnionTask.data.limit
	self.tx_unionTaskSlider.text = selfUnionTask.data.process .. "/" .. selfUnionTask.data.limit;
	
	self.icon_selfAward:SetSprite(selfUnionTask.selfAwardConfig.atlas, selfUnionTask.selfAwardConfig.icon)
	self.tx_selfAwardNum.text = "X"..selfUnionTask.config.reward_number
	
	self:setTimer()
	
	local costGem = math.ceil(CS_WorldParConfigManagerInst:GetConfig(selfUnionTask.config.difficulty + 2024 - 1).parameters);
	self.tx_unoinTaskGem.text = tostring(costGem)

	self.obj_unionDoingState:SetActive(selfUnionTask.data.state ~= MsgType.EUnionTaskState.CanReward)
	self.btn_unionTaskAward.gameObject:SetActive(selfUnionTask.data.state == MsgType.EUnionTaskState.CanReward)
	self.btn_unionTaskGem.gameObject:SetActive(selfUnionTask.data.state ~= MsgType.EUnionTaskState.CanReward)
	
end


function UnionSelfTaskDetailUI:onHide()
	
	print("UnionSelfTaskDetailUI onHide")
	self:clearTimer()
	self.unionTask = nil
	
end

function  UnionSelfTaskDetailUI:onShowed()
	
	print("UnionSelfTaskDetailUI onShowed")
	self.Img_unionConfirm.enabled = false

end

function UnionSelfTaskDetailUI:DoShowAnimation()

	self:onShowed()

	self.uiAnimator:CrossFade("show", 0);
	self.uiAnimator:Update(0);
	self.uiAnimator:Play("show");

end

function UnionSelfTaskDetailUI:DoHideAnimation()

	self.uiAnimator:Play("hide");
	local animLength = self.uiAnimator:GetClipLength("common_popUpUI_hide")

	CS_GameTimerInst:AddTimer(animLength,1,function ()
			self.uiAnimator:CrossFade("null", 0);
			self.uiAnimator:Update(0);
			self:HideView();
		end)

end

function UnionSelfTaskDetailUI:setTimer()

	self:timerMethod()

	self.timeId = CS_GameTimerInst:AddTimer(1,function()
			self:timerMethod()
		end)

end

function UnionSelfTaskDetailUI:timerMethod()
	
	self.tx_unionTaskCountDown.text = CS_TimeUtils.timeSpanStrip(self.unionTask.remainTime);
	
end

function UnionSelfTaskDetailUI:clearTimer()

	if 	self.timeId ~= 0 then

		CS_GameTimerInst:RemoveTimer(self.timeId)
		self.timeId = 0

	end

end

function UnionSelfTaskDetailUI:onUnionTaskCancelBtnClick()
	
	if CS_UserDataProxyInst.unionTaskCancelCoolTime > 0 then
		
		EventDispatcher:dispatchEvent(GameEvent.MsgTipEvent.ShowTextMsgTip,CS_LanguageManagerInst:GetValueByKey("您可以在{0}后再次放弃。",CS_TimeUtils.timeSpanStrip(CS_UserDataProxyInst.unionTaskCancelCoolTime)),"FF2828")
		
	else
		
		CS.AudioManager.inst:PlaySound(127)
		
		local funcGeneric = xlua.get_generic_method(CS.EventController, "TriggerEvent")
		local func_1 = funcGeneric(CS.System.Int32)

		func_1(CS_EventControllerInst,CS_GameEventType.UnionEvent.UNION_REQUEST_CANCELUNIONTASK,self.unionTask.data.taskUid)
		
	end
	
end

function UnionSelfTaskDetailUI:onUnionTaskAwardBtnClick()
	
	local funcGeneric = xlua.get_generic_method(CS.EventController, "TriggerEvent")
	local func_1 = funcGeneric(CS.System.Int32)

	func_1(CS_EventControllerInst,CS_GameEventType.UnionEvent.UNION_REQUEST_REWARDUNIONTASK,self.unionTask.data.taskUid)
	
end

function UnionSelfTaskDetailUI:onUnionTaskGemBtnClick()

	if self.Img_unionConfirm.enabled then
		
		self.Img_unionConfirm.enabled = false;
		local funcGeneric = xlua.get_generic_method(CS.EventController, "TriggerEvent")
		local func_1 = funcGeneric(CS.System.Int32)

		func_1(CS_EventControllerInst,CS_GameEventType.UnionEvent.UNION_REQUEST_GEMREWARDUNIONTASK,self.unionTask.data.taskUid)
		
	else
		self.Img_unionConfirm.enabled = true;
	end
	
end

------------------------------------------------