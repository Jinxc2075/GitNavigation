--LuxuryInfoUIView

require("const/Constants")
require("class")
require("ui/ViewBase")
require("config/LuxuryConfigManager")
local csEventControllerInst = CS.EventController.inst
local csGameEventType = CS.GameEventType
local EventDispatcher = require("event/EventDispatcher")
local csUserDataProxyInst = CS.UserDataProxy.inst
local csGUIHelper = CS.GUIHelper
local cs_LanguageManagerInst = CS.LanguageManager.inst
local CS_type_luaList = typeof(CS.LuaListItem)
local CS_type_superList = typeof(CS.Mosframe.DynamicScrollView)
local csGameTimerInst = CS.GameTimer.inst
local csVector2 = CS.UnityEngine.Vector2

local data
local dataList = {}

LuxuryInfoUIView = class(ViewBase)

function LuxuryInfoUIView:ctor()
	self.viewID = Constants.ViewName.LuxuryInfoUIView
	LuxuryInfoUIView.super.init(self, self.viewID)
	self.sortingLayerName = "window"
end

function LuxuryInfoUIView:initComp()
	local contentPane = self.contentPanel

	self.closeBtn = contentPane:GetButton("closeBtn")
	self.bgBtn = contentPane:GetButton("bg")
	local superList =  contentPane:GetObjByName("scrollView")
	self.scrollView = superList:GetComponent(CS_type_superList)
	self.listItemCount = 0

	self.curIcon = contentPane:GetGUIIcon("icon")
	self.nameText = contentPane:GetText("nameText")
	self.curStars = {}
	self.curStars[1] = contentPane:GetGUIIcon("star1")
	self.curStars[2] = contentPane:GetGUIIcon("star2")
	self.curStars[3] = contentPane:GetGUIIcon("star3")
	self.curStars[4] = contentPane:GetGUIIcon("star4")
	self.curStars[5] = contentPane:GetGUIIcon("star5")
	self.Slider = contentPane:GetObjByName("Slider"):GetComponent("Slider")
	self.scheduleText = contentPane:GetText("scheduleText")
	self.nextIcon = contentPane:GetGUIIcon("nextIcon")
	self.nextStars = {}
	self.nextStars[1] = contentPane:GetGUIIcon("nextStar1")
	self.nextStars[2] = contentPane:GetGUIIcon("nextStar2")
	self.nextStars[3] = contentPane:GetGUIIcon("nextStar3")
	self.nextStars[4] = contentPane:GetGUIIcon("nextStar4")
	self.nextStars[5] = contentPane:GetGUIIcon("nextStar5")
	self.nextObj = contentPane:GetObjByName("nextIconBg")

	self.rankBtn = contentPane:GetButton("rankBtn")

	self.descText = contentPane:GetText("descText")
	self.goDesignBtn = contentPane:GetButton("goDesignBtn")
	self.curLuxuryText = contentPane:GetText("curLuxuryText")
	self.nextNameText = contentPane:GetText("nextNameText")
	self.nextLuxuryText = contentPane:GetText("nextLuxuryText")
	self.infoBtn = contentPane:GetButton("infoBtn")
	self.nextLuxuryObj = contentPane:GetObjByName("nextObj")
	self.curRect = contentPane:GetObjByName("cur"):GetComponent("RectTransform")

	self.uiAnimator = contentPane.uiAnimator
end

function LuxuryInfoUIView:onInit()

	self:initComp()

	self.closeBtn:ButtonClickTween(
		function ()
			self:closeBtnClick()
		end
	)

	--self.bgBtn.onClick:AddListener(
		--function ()
			--self:closeBtnClick()
		--end
	--)

	self.rankBtn:ButtonClickTween(
		function ()
			EventDispatcher:dispatchEvent(GameEvent.RankEvent.Open_RankUIByBtn,1)
		end
	)

	self.goDesignBtn:ButtonClickTween(
		function ()
			local funcGeneric = xlua.get_generic_method(CS.EventController, "TriggerEvent_Lua2")
			local func = funcGeneric(CS.DesignMode,CS.System.Int32)
			func(csEventControllerInst, csGameEventType.ShopDesignEvent.EDITMODE_CHANGE,CS.DesignMode.modeSelection,CS.IndoorMap.tempItemUid)
		end
	)

	self.infoBtn:ButtonClickTween(
		function ()
			EventDispatcher:dispatchEvent(GameEvent.LuxuryEvent.ShowUI_LuxuryTip)
		end
	)

	self.scrollView.itemRenderer = function(index,item)
		self:ListItemRenderer(index,item)
	end
end

function LuxuryInfoUIView:DoShowAnimation()
	self:onShowed()

	self.uiAnimator:CrossFade("show", 0)
	self.uiAnimator:Update(0)
	self.uiAnimator:Play("show")
end

function LuxuryInfoUIView:DoHideAnimation()
	self.uiAnimator:Play("hide")
	local animLength = self.uiAnimator:GetClipLength("common_popUpUI_hide")

	csGameTimerInst:AddTimer(
		animLength,
		1,
		function()
			self.uiAnimator:CrossFade("null", 0)
			self.uiAnimator:Update(0)
			self:HideView()
		end
	)
end

function LuxuryInfoUIView:onHide()
	--print("LuxuryInfoUIView onHide")
end

function  LuxuryInfoUIView:onShowed()
	--print("LuxuryInfoUIView onShowed")
end

function LuxuryInfoUIView:shiftIn()
	self.contentObject:SetActive(true)

	local tempData = LuxuryConfigManager:GetConfigByLuxuryNum(CS.UserDataProxy.inst.playerData.prosperity)
	if(tempData ~= nil)then
		self:SetUIData(tempData)
	end
end

function LuxuryInfoUIView:shiftOut()
	self.contentObject:SetActive(false)
end

function LuxuryInfoUIView:closeBtnClick()
	self:hide()
end

function LuxuryInfoUIView:SetUIData(_data)
	data = _data
	
	if(data == nil)then
		data = LuxuryConfigData:new()
		local tempdata = LuxuryConfigManager:GetConfig(1)
		data.atlas = tempdata.atlas
		data.icon = tempdata.icon
		data.level = 0
		data.type = tempdata.type
		data.stars = "0"
		data.luxury_dec = "尚未改装的残破店铺，能有客人前来光顾就已经非常不容易了，还请用心设计一下它！"
	end
	csUserDataProxyInst.playerData.curLuxuryLevel = data.level
	dataList = LuxuryConfigManager:GetDifferentTypeData(data.level)
	local itemCount = #dataList
	
	-- 等表里加上字段 打开逻辑
	self.descText.text = cs_LanguageManagerInst:GetValueByKey(data.luxury_dec)
	
	self.curIcon:SetSprite(data.atlas,data.icon)
	self.nameText.text = cs_LanguageManagerInst:GetValueByKey("{0}星-{1}店铺",data.stars,cs_LanguageManagerInst:GetValueByKey(data.type))
	self.curLuxuryText.text = cs_LanguageManagerInst:GetValueByKey("豪华度：{0}",tostring(csUserDataProxyInst.playerData.prosperity))
	for i = 1, #self.curStars do
		if(i <= tonumber(data.stars))then
			self.curStars[i]:SetSprite("luxury_atlas","yingxiong_xingcheng")
		else
			self.curStars[i]:SetSprite("luxury_atlas","yingxiong_xingcheng1")
		end
	end
	local nextData = LuxuryConfigManager:GetConfig(tonumber(data.level) + 1)
	if(nextData ~= nil)then
		self.nextLuxuryObj:SetActive(true)
		self.curRect.anchoredPosition = csVector2(-260,self.curRect.anchoredPosition.y)
		self.nextNameText.text = cs_LanguageManagerInst:GetValueByKey("{0}星-{1}店铺",nextData.stars,cs_LanguageManagerInst:GetValueByKey(nextData.type))
		self.nextLuxuryText.text = cs_LanguageManagerInst:GetValueByKey("豪华度：{0}",tostring(nextData.luxury_num))
		--self.nextObj:SetActive(true)
		--self.scheduleText.text = csUserDataProxyInst.playerData.prosperity .. "/" .. nextData.luxury_num
		--self.nextIcon:SetSprite(nextData.atlas,nextData.icon)

		--for i = 1, #self.nextStars do
		--if(i <= tonumber(nextData.stars))then
		--self.nextStars[i]:SetSprite("luxury_atlas","yingxiong_xingcheng")
		--else
		--self.nextStars[i]:SetSprite("luxury_atlas","yingxiong_xingcheng1")
		--end
		--end

		--self.Slider.maxValue = nextData.luxury_num
		--self.Slider.value = csUserDataProxyInst.playerData.prosperity
	else
		self.nextLuxuryObj:SetActive(false)
		self.curRect.anchoredPosition = csVector2(0,self.curRect.anchoredPosition.y)
		--self.nextObj:SetActive(false)
		--self.Slider.maxValue = 1
		--self.Slider.value = 1
		--self.scheduleText.text = "max"
	end
	self:SetListItemTotalCount(itemCount)
end

function LuxuryInfoUIView:ListItemRenderer(index,item)
	local prefabItem = item
	if(index >= self.listItemCount)then
		prefabItem.gameObject:SetActive(false)
	end

	if(index < self.listItemCount)then
		prefabItem.gameObject:SetActive(true)
		prefabItem:SetData(dataList[index + 1])
	end
end

function LuxuryInfoUIView:SetListItemTotalCount(count)
	self.listItemCount = count
	if(count < 0)then
		self.listItemCount = 0
	end

	self.scrollView.totalItemCount = count
end
------------------------------------------------