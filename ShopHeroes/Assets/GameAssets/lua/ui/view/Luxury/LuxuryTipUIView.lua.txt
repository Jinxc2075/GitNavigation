--LuxuryTipUIView

require("const/Constants")
require("class")
require("ui/ViewBase")
require("config/LuxuryConfigManager")
local csEventControllerInst = CS.EventController.inst
local csGameEventType = CS.GameEventType
local EventDispatcher = require("event/EventDispatcher")
local csUserDataProxyInst = CS.UserDataProxy.inst
local csGUIHelper = CS.GUIHelper
local cs_LanguageManagerInst = CS.LanguageManager.inst
local CS_type_luaList = typeof(CS.LuaListItem)
local CS_type_superList = typeof(CS.Mosframe.DynamicScrollView)

LuxuryTipUIView = class(ViewBase)

function LuxuryTipUIView:ctor()
	self.viewID = Constants.ViewName.LuxuryTipUIView
	LuxuryTipUIView.super.init(self, self.viewID)
	self.sortingLayerName = "window"
end

function LuxuryTipUIView:initComp()
	local contentPane = self.contentPanel

	self.closeBtn = contentPane:GetButton("closeBtn")
	local superList =  contentPane:GetObjByName("scrollView")
	self.scrollView = superList:GetComponent(CS_type_superList)
	self.listItemCount = 0
end

function LuxuryTipUIView:onInit()

	self:initComp()

	self.closeBtn:ButtonClickTween(
		function ()
			self:closeBtnClick()
		end
	)

	self.scrollView.itemRenderer = function(index,item)
		self:ListItemRenderer(index,item)
	end
	
	self.dataList = nil
end

function LuxuryTipUIView:onHide()
	--print("LuxuryTipUIView onHide")
end

function  LuxuryTipUIView:onShowed()
	--print("LuxuryTipUIView onShowed")
end

function LuxuryTipUIView:shiftIn()
	self.contentObject:SetActive(true)
end

function LuxuryTipUIView:shiftOut()
	self.contentObject:SetActive(false)
end

function LuxuryTipUIView:closeBtnClick()
	self:hide()
end

function LuxuryTipUIView:SetUIData()
	self.dataList = LuxuryConfigManager:GetNotUnlockList(csUserDataProxyInst.playerData.curLuxuryLevel)
	
	if(self.dataList == nil or #self.dataList <= 0) then return end
	
	self:SetListItemTotalCount(#self.dataList)
end

function LuxuryTipUIView:ListItemRenderer(index,item)
	local prefabItem = item
	if(index >= self.listItemCount)then
		prefabItem.gameObject:SetActive(false)
	end

	if(index < self.listItemCount)then
		prefabItem.gameObject:SetActive(true)
		prefabItem:SetData(self.dataList[index + 1])
	end
end

function LuxuryTipUIView:SetListItemTotalCount(count)
	self.listItemCount = count
	if(count < 0)then
		self.listItemCount = 0
	end

	self.scrollView.totalItemCount = count
end
------------------------------------------------