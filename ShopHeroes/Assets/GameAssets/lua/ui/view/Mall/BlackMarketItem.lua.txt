local itemName
local icon
local itemCount
local bg
local rebateText
local tx_gem
local tx_buyed
local gray
local selfBtn

local CS_LanguageManagerInst = CS.LanguageManager.inst
local CS_ItemConfigManagerInst = CS.ItemconfigManager.inst
local CS_EquipConfigManagerInst = CS.EquipConfigManager.inst
local CS_GUIHelper = CS.GUIHelper
local csEVIPPayState = CS.EVIPPayState

local EventDispatcher = require("event/EventDispatcher")

local data

function InitComp()
	selfBtn = self.gameObject:GetComponent("Button")
	itemName = self:GetObjByName("itemName"):GetComponent("Text")
	icon = self:GetObjByName("icon"):GetComponent("GUIIcon")
	itemCount = self:GetObjByName("itemCount"):GetComponent("Text")
	bg = self:GetObjByName("bg")
	rebateText = self:GetObjByName("rebateText"):GetComponent("Text")
	tx_gem = self:GetObjByName("tx_gem"):GetComponent("Text")
	tx_buyed = self:GetObjByName("tx_buyed"):GetComponent("Text")
	gray = self:GetObjByName("gray"):GetComponent("Image")

	selfBtn:ButtonClickTween(
		function ()
			if(data == nil) then return end
			if(csEVIPPayState.__CastFrom(data.state) == csEVIPPayState.Buy) then return end
			EventDispatcher:dispatchEvent(GameEvent.MallEvent.ShowUI_BlackMarketUI,data)
		end
	)
end

function SetData(_data)
	if(_data == nil) then return end

	data = _data

	local itemCfg = CS_ItemConfigManagerInst:GetConfig(data.item.itemId)
	if(itemCfg ~= nil) then
		itemName.text = CS_LanguageManagerInst:GetValueByKey(itemCfg.name)
		icon:SetSpriteURL(itemCfg.icon)
	else
		local equipCfg = CS_EquipConfigManagerInst:GetEquipDrawingsCfg(data.item.itemId)
		if(equipCfg ~= nil) then
			icon:SetSpriteURL(equipCfg.equipDrawingsConfig.icon, CS.StaticConstants.qualityColor[equipCfg.equipQualityConfig.quality - 1])
			itemName.text = equipCfg.name
		end
	end

	itemCount.text = "x  " .. tostring(data.item.count)
	if(data.textCn ~= nil and string.len(data.textCn) > 0)then
		bg:SetActive(true)
		local str = CS_LanguageManagerInst:GetValueByKey(data.textCn)
		rebateText.text = string.gsub(str,"\\n","\n")
	else
		bg:SetActive(false)
	end

	tx_gem.text = tostring(data.price)
	local curState = data.state
	tx_gem.gameObject:SetActive(csEVIPPayState.__CastFrom(curState) ~= csEVIPPayState.Buy)
	tx_buyed.enabled = csEVIPPayState.__CastFrom(curState) == csEVIPPayState.Buy
	--gray.enabled = csEVIPPayState.__CastFrom(curState) == csEVIPPayState.Buy
	CS_GUIHelper.SetUIGray(self.transform,csEVIPPayState.__CastFrom(curState) == csEVIPPayState.Buy)
end