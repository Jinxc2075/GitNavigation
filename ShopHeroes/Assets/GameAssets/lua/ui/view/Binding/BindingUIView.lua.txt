--BindingUIView

require("const/Constants")
require("class")
require("ui/ViewBase")
require("utils/XLuaUtils")
local cs_LanguageManagerInst = CS.LanguageManager.inst
local csEventControllerInst = CS.EventController.inst
local csGameEventType = CS.GameEventType
local EventDispatcher = require("event/EventDispatcher")
local csGameTimerInst = CS.GameTimer.inst

BindingUIView = class(ViewBase)

function BindingUIView:ctor()
	self.viewID = Constants.ViewName.BindingUIView
	BindingUIView.super.init(self, self.viewID)
	--self.showType = 0
	self.sortingLayerName = "window"
end

function BindingUIView:initComp()
	local contentPane = self.contentPanel

	self.closeBtn = contentPane:GetButton("closeBtn")
	self.bindingCount = contentPane:GetText("bindingCount")
	self.bindingBtn = contentPane:GetButton("bindingBtn")
	self.refreshHorizontal = contentPane:GetObjByName("refreshHorizontal"):GetComponent("RectTransform")
	
	self.bgBtn = contentPane:GetButton("bg")
	
	self.uiAnimator = contentPane.uiAnimator
end

function BindingUIView:onInit()
	self:initComp()

	self.closeBtn:ButtonClickTween(
		function()
			self:closeBtnClick()
		end
	)
	
	self.bgBtn.onClick:AddListener(
		function ()
			self:closeBtnClick()
		end
	)

	self.bindingBtn:ButtonClickTween(
		function()
			self:closeBtnClick()
			csEventControllerInst:TriggerEvent(csGameEventType.SHOWUI_SETTINGBINDING)
		end
	)
end

function BindingUIView:DoShowAnimation()
	self:onShowed()
	self.uiAnimator:CrossFade("show", 0)
	self.uiAnimator:Update(0)
	self.uiAnimator:Play("show")
end

function BindingUIView:DoHideAnimation()
	self.uiAnimator:Play("hide")
	local animLength = self.uiAnimator:GetClipLength("common_popUpUI_hide")

	csGameTimerInst:AddTimer(
		animLength,
		1,
		function()
			self.uiAnimator:CrossFade("null", 0)
			self.uiAnimator:Update(0)
			self:HideView()
		end
	)
end

function BindingUIView:closeBtnClick()
	self:hide()
end

function BindingUIView:onShowed()
	self.bindingCount.text = tostring(math.floor(CS.WorldParConfigManager.inst:GetConfig(8100).parameters))
	CS.UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(self.refreshHorizontal)
end

function BindingUIView:shiftIn()
	self.contentObject:SetActive(true)
end

function BindingUIView:shiftOut()
	self.contentObject:SetActive(false)
end
------------------------------------------------
