--RuinsTipUIView

require("const/Constants")
require("class")
require("ui/ViewBase")
require("utils/XLuaUtils")
local cs_LanguageManagerInst = CS.LanguageManager.inst
local csEventControllerInst = CS.EventController.inst
local csGameEventType = CS.GameEventType
local csGUIHelper = CS.GUIHelper
local GameTimerInst = CS.GameTimer.inst
local EventDispatcher = require("event/EventDispatcher")

RuinsTipUIView = class(ViewBase)

function RuinsTipUIView:ctor()
	self.viewID = Constants.ViewName.RuinsTipUIView
	RuinsTipUIView.super.init(self, self.viewID)
	self.sortingLayerName = "window"
end

function RuinsTipUIView:initComp()
	local contentPane = self.contentPanel

	self.enterBtn = contentPane:GetButton("enterBtn")
	self.leaveBtn = contentPane:GetButton("leaveBtn")
	self.closeBtn = contentPane:GetButton("closeBtn")

	self.uiAnimator = contentPane.uiAnimator
end

function RuinsTipUIView:onInit()
	self:initComp()

	self.enterBtn:ButtonClickTween(
		function()
			-- 发消息克隆英雄数据
			self:hide()
			EventDispatcher:dispatchEvent(GameEvent.RuinsEvent.Request_RuinsData)
		end
	)

	self.leaveBtn:ButtonClickTween(
		function()
			self:hide()
			EventDispatcher:dispatchEvent(GameEvent.CSEvent.Change_State, CS.StateTransition(CS.kGameState.Town,true))
		end
	)
	
	self.closeBtn:ButtonClickTween(
		function()
			self:hide()
		end
	)
end

function RuinsTipUIView:DoShowAnimation()
	self:onShowed()

	self.uiAnimator:CrossFade("show", 0)
	self.uiAnimator:Update(0)
	self.uiAnimator:Play("show")
end

function RuinsTipUIView:DoHideAnimation()
	self.uiAnimator:Play("hide")
	local animLength = self.uiAnimator:GetClipLength("common_popUpUI_hide")

	GameTimerInst:AddTimer(
		animLength,
		1,
		function()
			self.uiAnimator:CrossFade("null", 0)
			self.uiAnimator:Update(0)
			self:HideView()
		end
	)
end

function RuinsTipUIView:onHide()

end

function RuinsTipUIView:onShowed()
	if(CS.RuinsMap.inst ~= nil)then
		CS.RuinsMap.inst:setIsInMain(false)
	end
end

function RuinsTipUIView:ShowUIByType(fromType) -- 1 - 首次登陆废墟正常弹出 2 - 从出战界面点击tipBtn进入
	if(fromType == 1)then
		self.enterBtn.gameObject:SetActive(true)
		self.leaveBtn.gameObject:SetActive(true)
		self.closeBtn.gameObject:SetActive(false)
	elseif fromType == 2 then
		self.enterBtn.gameObject:SetActive(false)
		self.leaveBtn.gameObject:SetActive(false)
		self.closeBtn.gameObject:SetActive(true)
	end
end

function RuinsTipUIView:shiftIn()
	self.contentObject:SetActive(true)
end

function RuinsTipUIView:shiftOut()
	self.contentObject:SetActive(false)
end

function RuinsTipUIView:closeBtnClick()
	self:hide()
end
------------------------------------------------
